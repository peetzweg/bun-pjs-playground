{
  "source": {
    "hash": "0x50dd2517ea89230ee34d03b68c632a04d5f57b2f334ca290f3484d5d672cbf7a",
    "language": "ink! 5.0.0",
    "compiler": "rustc 1.75.0",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "4.0.2",
      "rust_toolchain": "stable-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "link",
    "version": "0.1.0",
    "authors": [
      "Parity Technologies <admin@parity.io>"
    ]
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [],
        "default": false,
        "docs": [
          "Construct a new contract and set the caller as an upgrader.",
          "",
          "The caller will be able to upgrade this contract to use any code. This requires",
          "users of the contract to trust the upgrader. Probably a multisig should be used",
          "for that reason. A truly trustless deployment should use the [`unstoppable`]",
          "constructor."
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 14
        },
        "selector": "0x9bae9d5e"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          "Construct a new contract and don't set an upgrader.",
          "",
          "This prevents the contract from being changed and hence makes it truly",
          "unstoppable."
        ],
        "label": "unstoppable",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 14
        },
        "selector": "0x80f86a83"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 10
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 26
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 28
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 29
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 23
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 27
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [
              "The slug of the mapping."
            ],
            "indexed": false,
            "label": "slug",
            "type": {
              "displayName": [
                "Slug"
              ],
              "type": 0
            }
          },
          {
            "docs": [
              "The URL that the slug maps to."
            ],
            "indexed": false,
            "label": "url",
            "type": {
              "displayName": [
                "Url"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "A new slug mapping was created."
        ],
        "label": "Shortened",
        "module_path": "link::link",
        "signature_topic": "0x158f3971ec2959a4691577ffa84e840235df7042fca7436d7b1c5da8fedb8550"
      },
      {
        "args": [
          {
            "docs": [
              "The slug of the mapping."
            ],
            "indexed": false,
            "label": "slug",
            "type": {
              "displayName": [
                "Slug"
              ],
              "type": 0
            }
          },
          {
            "docs": [
              "The URL that the slug maps to."
            ],
            "indexed": false,
            "label": "url",
            "type": {
              "displayName": [
                "Url"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "A pre-existing mapping was used."
        ],
        "label": "Deduplicated",
        "module_path": "link::link",
        "signature_topic": "0x1d5bed68bd86daf899039efa5fc22aa452a9b86752bae8c91c5aaf1c44112a62"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 15
    },
    "messages": [
      {
        "args": [
          {
            "label": "slug",
            "type": {
              "displayName": [
                "SlugCreationMode"
              ],
              "type": 16
            }
          },
          {
            "label": "url",
            "type": {
              "displayName": [
                "Url"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Create a a new mapping or use an existing one."
        ],
        "label": "shorten",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 17
        },
        "selector": "0x92ccc180"
      },
      {
        "args": [
          {
            "label": "slug",
            "type": {
              "displayName": [
                "Slug"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Resolve a slug to its mapped URL."
        ],
        "label": "resolve",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 21
        },
        "selector": "0x9e30d65d"
      },
      {
        "args": [
          {
            "label": "code_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 23
            }
          }
        ],
        "default": false,
        "docs": [
          " Change the code of this contract.",
          "",
          " This can only be called by the upgrader specified at contract construction.",
          " The code cannot be changed in case no upgrader was set because the",
          " [`unstoppable`] constructor was used."
        ],
        "label": "upgrade",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x9852f7b0"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x0ab331a1",
                      "ty": 0
                    }
                  },
                  "root_key": "0x0ab331a1",
                  "ty": 2
                }
              },
              "name": "urls"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x96046c00",
                      "ty": 0
                    }
                  },
                  "root_key": "0x96046c00",
                  "ty": 7
                }
              },
              "name": "slugs"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 10
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "upgrader"
            }
          ],
          "name": "Link"
        }
      },
      "root_key": "0x00000000",
      "ty": 12
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "sequence": {
            "type": 1
          }
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 0
          },
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 3
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 4
          },
          {
            "name": "R",
            "type": 5
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {}
        },
        "path": [
          "ink_storage_traits",
          "impls",
          "AutoKey"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 6
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 0
          },
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 8
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 4
          },
          {
            "name": "R",
            "type": 9
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 6
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 11,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 1
          }
        }
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "urls",
                "type": 2,
                "typeName": "<Mapping<Slug, Url> as::ink::storage::traits::AutoStorableHint<\n::ink::storage::traits::ManualKey<2704388874u32, ()>,>>::Type"
              },
              {
                "name": "slugs",
                "type": 7,
                "typeName": "<Mapping<Url, Slug> as::ink::storage::traits::AutoStorableHint<\n::ink::storage::traits::ManualKey<7079062u32, ()>,>>::Type"
              },
              {
                "name": "upgrader",
                "type": 13,
                "typeName": "<Option<AccountId> as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<928189994u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": [
          "link",
          "link",
          "Link"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0,
                    "typeName": "Slug"
                  }
                ],
                "index": 0,
                "name": "New"
              },
              {
                "fields": [
                  {
                    "type": 0,
                    "typeName": "Slug"
                  }
                ],
                "index": 1,
                "name": "DeduplicateOrNew"
              },
              {
                "index": 2,
                "name": "Deduplicate"
              }
            ]
          }
        },
        "path": [
          "link",
          "link",
          "SlugCreationMode"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 18
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 19
          },
          {
            "name": "E",
            "type": 20
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Shortened"
              },
              {
                "fields": [
                  {
                    "name": "slug",
                    "type": 0,
                    "typeName": "Slug"
                  }
                ],
                "index": 1,
                "name": "Deduplicated"
              }
            ]
          }
        },
        "path": [
          "link",
          "link",
          "ShorteningOutcome"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "SlugUnavailable"
              },
              {
                "index": 1,
                "name": "SlugTooShort"
              },
              {
                "index": 2,
                "name": "UrlNotFound"
              },
              {
                "index": 3,
                "name": "UpgradeDenied"
              },
              {
                "index": 4,
                "name": "UpgradeFailed"
              }
            ]
          }
        },
        "path": [
          "link",
          "link",
          "Error"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 22
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 11,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 25
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 20
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": 5
}